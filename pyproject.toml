[build-system]
requires = [
    "setuptools",
    "setuptools-scm",
]
build-backend = "setuptools.build_meta"

[project]
name = "ngo"
authors = [
    { name = "Max Ostrowski", email = "max.ostrowski@potassco.com" }
]
description = "Optimizes non ground logic programs."
requires-python = ">=3.11"
license = {file = "LICENSE"}
dynamic = [ "version" ]
readme = "README.md"

dependencies = [
    "clingo>=5.7.1,<6.0",
    "networkx>=3.1",
    "sympy>=1.12",
]

[project.urls]
Homepage = "https://potassco.org/ngo"
Documentation = "https://potassco.org/ngo"
Repository = "http://github.com/potassco/ngo"

[project.optional-dependencies]
format = [ "black", "isort"]
lint = [ "pylint", "ngo[test]" ]
typecheck = [ "types-setuptools", "mypy", "networkx-stubs", "ngo[test]" ]
test = [ "pytest", "coverage" ]
doc = [ "pdoc" ]
dev = [ "ngo[test,typecheck,lint,format,doc]", "pre-commit" ]

[project.scripts]
ngo = "ngo.__main__:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
version_scheme = "python-simplified-semver"
local_scheme = "no-local-version"

[tool.isort]
profile = "black"
line_length = 120

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120

[tool.pylint.format]
max-line-length = 120

[tool.pylint.design]
max-args = 10
max-attributes = 7
max-bool-expr = 5
max-branches = 12
max-locals = 30
max-parents = 7
max-public-methods = 20
max-returns = 10
max-statements = 50
min-public-methods = 1

[tool.pylint.similarities]
ignore-comments = true
ignore-docstrings = true
ignore-imports = true
ignore-signatures = true

[tool.pylint.basic]
argument-rgx = "^[a-z][a-z0-9]*((_[a-z0-9]+)*_?)?$"
variable-rgx = "^[a-z][a-z0-9]*((_[a-z0-9]+)*_?)?$"
good-names = ["_", "M", "N", "B", "A", "Nn", "Bn", "An"]

[tool.pylint.miscellanous]

# List of note tags to take in consideration, separated by a comma.
notes = [] # "FIXME", "XXX", "TODO"

[tool.pylint."messages control"]
disable = ["logging-fstring-interpolation"]

[tool.coverage.run]
source = ["ngo", "tests"]
omit = ["*/ngo/__main__.py"]

[tool.coverage.report]
exclude_lines = ["assert", "nocoverage"]



